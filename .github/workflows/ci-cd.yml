name: CI/CD Pipeline

on:
  push:
    branches:
      - DevOps
    paths:
      - 'next-front/**'  # Solo ejecuta si hay cambios en la carpeta del front-end
      - 'spring-backend/**'  # Solo ejecuta si hay cambios en la carpeta del back-end
  pull_request:
    branches:
      - DevOps
    paths:
      - 'next-front/**'
      - 'spring-backend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ms_products_db
        options: --health-cmd="pg_isready -U example" --health-timeout=30s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image for front-end
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'next-front')
        run: |
          docker-compose -f docker-compose.yml build front

      - name: Build Docker image for back-end
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'spring-backend')
        run: |
          docker-compose -f docker-compose.yml build back

      - name: Run Tests for Frontend
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'next-front')
        run: |
          docker-compose -f docker-compose.yml run front sh -c "npm run test"

      - name: Run Tests for Backend
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'spring-backend')
        run: |
          docker-compose -f docker-compose.yml run back sh -c "mvn test"
