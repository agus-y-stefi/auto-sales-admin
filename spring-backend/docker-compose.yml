version: "3.9"

services:
  # Bases de datos
  ms-customers-db:
    image: postgres:17
    container_name: ms-customers-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ms-customers-db
    ports:
      - "5439:5432"
    volumes:
      - ./migration-db-script/latest/customers-ms:/docker-entrypoint-initdb.d/
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ms-customers-db"]
      interval: 5s
      retries: 5

  ms-orders-db:
    image: postgres:17
    container_name: ms-orders-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ms-orders-db
    ports:
      - "5440:5432"
    volumes:
      - ./migration-db-script/latest/orders-ms:/docker-entrypoint-initdb.d/
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ms-orders-db"]
      interval: 5s
      retries: 5

  ms-products-db:
    image: postgres:17
    container_name: ms-products-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ms-products-db
    ports:
      - "5441:5432"
    volumes:
      - ./migration-db-script/latest/products-ms:/docker-entrypoint-initdb.d/
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ms-products-db"]
      interval: 5s
      retries: 5

  # Microservicios
  customer_service:
    build:
      context: ./services/customer_service
      dockerfile: Dockerfile
    container_name: customer_service
    ports:
      - "8081:8081"
    depends_on:
      ms-customers-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend

  orders_service:
    build:
      context: ./services/orders_service
      dockerfile: Dockerfile
    container_name: orders_service
    ports:
      - "8082:8082"
    depends_on:
      ms-orders-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend

  product_service:
    build:
      context: ./services/product_service
      dockerfile: Dockerfile
    container_name: product_service
    ports:
      - "8083:8083"
    depends_on:
      ms-products-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend

networks:
  backend:
    driver: bridge
